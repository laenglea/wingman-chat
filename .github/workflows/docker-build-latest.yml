name: Nightly Docker build & push (GHCR)

on:
  schedule:
    - cron: '0 3 * * *'   # täglich um 03:00 UTC
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Get current commit SHA
        id: vars
        run: |
          echo "sha=${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Check if image for this commit already exists on GHCR
        id: check_image
        env:
          REGISTRY: ghcr.io
          REPO: ${{ github.repository }}          # owner/repo
          USER: ${{ github.actor }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SHA: ${{ github.sha }}
        run: |
          # Anfrage an die Docker Registry API: /v2/<repo>/manifests/<reference>
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" -u "${USER}:${TOKEN}" \
            -H "Accept: application/vnd.docker.distribution.manifest.v2+json" \
            https://${REGISTRY}/v2/${REPO}/manifests/${SHA} || true)
          if [ "$STATUS" = "200" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up QEMU (for multi-platform builds)
        if: steps.check_image.outputs.exists == 'false'
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: steps.check_image.outputs.exists == 'false'
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        if: steps.check_image.outputs.exists == 'false'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        if: steps.check_image.outputs.exists == 'false'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            ghcr.io/${{ github.repository }}:latest
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:cache
          cache-to: type=inline

      - name: Skip message
        if: steps.check_image.outputs.exists == 'true'
        run: echo "No new commits since last build — skipping Docker build & push."
